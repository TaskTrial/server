name: CI Pipeline

on: [push, pull_request]

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  eslint:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  prettier:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

  commit:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Check commit messages
        run: npx commitlint --from=HEAD --to=HEAD

  testing:
    runs-on: ubuntu-latest
    needs: [setup, eslint, prettier]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: NODE_ENV=test npm run test:integration
        env:
          GOOGLE_CLIENT_ID: mock_id
          GOOGLE_CLIENT_SECRET: mock_secret
          GOOGLE_CALLBACK_URL: http://localhost:3000/callback

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Create test environment file
        run: |
          echo "GOOGLE_CLIENT_ID=test_client_id" >> .env.test
          echo "GOOGLE_CLIENT_SECRET=test_client_secret" >> .env.test
          echo "GOOGLE_CALLBACK_URL=http://localhost:3000/auth/google/callback" >> .env.test
          # Add other required environment variables
