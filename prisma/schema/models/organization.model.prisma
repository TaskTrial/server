model Organization {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @db.VarChar(100)
  description String?  @db.Text
  industry    String   @db.VarChar(50)
  sizeRange   String   @db.VarChar(50)
  website     String?  @db.VarChar(255)
  logoUrl     String?
  isVerified  Boolean  @default(false)
  status      String   @db.VarChar(20)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  createdBy   String   @db.Uuid

  // Relations
  creator     User                @relation("OrganizationCreator", fields: [createdBy], references: [id])
  departments Department[]
  teams       Team[]
  projects    Project[]
  users       User[]              @relation("OrganizationEmployees")
  reports     Report[]
  owners      OrganizationOwner[]

  @@map("organizations")
  @@index([createdBy])
}

model OrganizationOwner {
  id             String   @id @default(uuid()) @db.Uuid
  organizationId String   @db.Uuid
  userId         String   @db.Uuid
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("organization_owners")
  @@index([organizationId])
  @@index([userId])
}