model Team {
  id             String   @id @default(uuid()) @db.Uuid
  name           String   @db.VarChar(100)
  description    String?  @db.Text
  createdBy      String   @db.Uuid
  organizationId String   @db.Uuid
  departmentId   String   @db.Uuid
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  deletedAt      DateTime?

  // Relations
  creator      User         @relation("TeamCreator", fields: [createdBy], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  department   Department   @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  members      TeamMember[]
  projects     Project[]
  reports      Report[]

  @@map("teams")
  @@index([organizationId])
  @@index([departmentId])
  @@index([createdBy])
}

model TeamMember {
  id       String         @id @default(uuid()) @db.Uuid
  teamId   String         @db.Uuid
  userId   String         @db.Uuid
  role     TeamMemberRole
  joinedAt DateTime       @default(now())
  isActive Boolean        @default(true)

  // Relations
  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("team_members")
  @@index([teamId])
  @@index([userId])
}