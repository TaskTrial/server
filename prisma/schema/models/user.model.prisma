model User {
  id                       String    @id @default(uuid()) @db.Uuid
  email                    String    @unique @db.VarChar(255)
  username                 String    @unique @db.VarChar(50)
  password                 String    @db.VarChar(255)
  firstName                String    @db.VarChar(100)
  lastName                 String    @db.VarChar(100)
  role                     UserRole
  profilePic               String?
  departmentId             String?   @db.Uuid
  organizationId           String?   @db.Uuid
  isOwner                  Boolean   @default(false)
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  isActive                 Boolean   @default(true)
  deletedAt                DateTime?
  phoneNumber              String?   @db.VarChar(50)
  jobTitle                 String?   @db.VarChar(100)
  timezone                 String?   @db.VarChar(50)
  bio                      String?   @db.Text
  preferences              Json? // for user-specific settings
  emailVerificationToken   String?
  emailVerificationExpires DateTime?
  passwordResetToken       String?
  passwordResetExpires     DateTime?
  refreshToken             String?
  lastLogin                DateTime?
  lastLogout               DateTime?

  // Relations
  department           Department?         @relation(fields: [departmentId], references: [id])
  organization         Organization?       @relation("OrganizationEmployees", fields: [organizationId], references: [id])
  createdOrganizations Organization[]      @relation("OrganizationCreator")
  ownedOrganizations   OrganizationOwner[]
  managedDepartments   Department[]        @relation("DepartmentManager")
  createdTeams         Team[]              @relation("TeamCreator")
  teamMemberships      TeamMember[]
  createdProjects      Project[]           @relation("ProjectCreator")
  modifiedProjects     Project[]           @relation("ProjectModifier")
  createdTasks         Task[]              @relation("TaskCreator")
  assignedTasks        Task[]              @relation("TaskAssignee")
  modifiedTasks        Task[]              @relation("TaskModifier")
  notifications        Notification[]
  timelogs             Timelog[]
  comments             Comment[]
  taskAttachments      TaskAttachment[]
  generatedReports     Report[]
  userReports          Report[]            @relation("UserReports")
  permissions          Permission[] // relation to permissions
  activityLogs         ActivityLog[] // relation to activity logs as performer

  @@index([departmentId])
  @@index([organizationId])
  @@index([role])
  @@index([isActive])
  @@map("users")
}

model Permission {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String   @db.Uuid
  entityType  String // "project", "team", etc.
  entityId    String   @db.Uuid
  permissions Json // detailed permission structure
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@unique([userId, entityType, entityId])
  @@index([entityId, entityType])
  @@map("permissions")
}
