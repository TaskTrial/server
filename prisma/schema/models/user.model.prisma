model User {
  id             String   @id @default(uuid()) @db.Uuid
  email          String   @unique @db.VarChar(255)
  username       String   @unique @db.VarChar(50)
  password       String   @db.VarChar(255)
  name           String   @db.VarChar(100)
  role           UserRole
  profilePic     String?
  departmentId   String?  @db.Uuid
  organizationId String?  @db.Uuid
  isOwner        Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isActive       Boolean  @default(true)
  deletedAt      DateTime?

  // Relations
  department           Department?         @relation(fields: [departmentId], references: [id])
  organization         Organization?       @relation("OrganizationEmployees", fields: [organizationId], references: [id])
  createdOrganizations Organization[]      @relation("OrganizationCreator")
  ownedOrganizations   OrganizationOwner[]
  managedDepartments   Department[]        @relation("DepartmentManager")
  createdTeams         Team[]              @relation("TeamCreator")
  teamMemberships      TeamMember[]
  createdProjects      Project[]           @relation("ProjectCreator")
  createdTasks         Task[]              @relation("TaskCreator")
  assignedTasks        Task[]              @relation("TaskAssignee")
  notifications        Notification[]
  timelogs            Timelog[]
  comments             Comment[]
  taskAttachments      TaskAttachment[]
  generatedReports     Report[]

  @@map("users")
  @@index([departmentId])
  @@index([organizationId])
}