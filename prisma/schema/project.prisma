model Project {
  id             String   @id @default(uuid()) @db.Uuid
  name           String
  description    String?
  status         String
  createdBy      String   @db.Uuid
  organizationId String   @db.Uuid
  teamId         String   @db.Uuid
  startDate      DateTime
  endDate        DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  creator      User         @relation("ProjectCreator", fields: [createdBy], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])
  team         Team         @relation(fields: [teamId], references: [id])
  sprints      Sprint[]
  tasks        Task[]

  @@map("projects")
}

model Sprint {
  id          String   @id @default(uuid()) @db.Uuid
  projectId   String   @db.Uuid
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  status      String

  // Relations
  project Project @relation(fields: [projectId], references: [id])
  tasks   Task[]

  @@map("sprints")
}
