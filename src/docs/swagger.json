{
  "openapi": "3.0.0",
  "info": {
    "title": "TaskTrial APIs",
    "version": "1.0.0",
    "description": "Project Management App",
    "contact": {
      "email": "tasktrial27@gmail.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "User",
      "description": "User management"
    },
    {
      "name": "Organization",
      "description": "Organization management"
    },
    {
      "name": "Department",
      "description": "Department management"
    },
    {
      "name": "Team",
      "description": "Team management"
    },
    {
      "name": "Project",
      "description": "Project management"
    },
    {
      "name": "Sprint",
      "description": "Sprint management"
    },
    {
      "name": "Task",
      "description": "Task management"
    },
    {
      "name": "Activity Logs",
      "description": "Activity Logs management"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Creates a new user account and sends verification OTP to email",
        "description": "Register a new user with email, password, and personal details. Sends verification OTP to the provided email.",
        "operationId": "signup",
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName",
                  "username"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 6,
                    "example": "securePassword123"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully. Verification OTP sent to email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created. Please verify your email."
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User with this email or username already exists"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests, please try again later."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/resendOTP": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend OTP code for email verification",
        "description": "Generates a new OTP and sends it to the user's email if the previous one expired or wasn't received.",
        "operationId": "resendOTP",
        "requestBody": {
          "description": "Email address to resend OTP",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Code sent successfully. Please check your email"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Please enter a valid email"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests, please try again later."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to send email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send verification email. Please try again later."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/verifyEmail": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify user's email address using OTP",
        "description": "Validates the OTP sent to user's email and activates their account if verification is successful.",
        "operationId": "verifyEmail",
        "requestBody": {
          "description": "Email and OTP for verification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "otp"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "otp": {
                    "type": "string",
                    "description": "6-digit verification code",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email verified successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error, invalid OTP, or email already verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired OTP"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests, please try again later."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticate user and return JWT tokens",
        "description": "Validates user credentials and returns access and refresh tokens if authentication is successful.",
        "operationId": "signin",
        "requestBody": {
          "description": "User credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "yourpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User login successfully"
                    },
                    "accessToken": {
                      "type": "string",
                      "description": "JWT access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "JWT refresh token (also set as HTTP-only cookie)",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": ["MEMBER", "ADMIN", "SUPER_ADMIN"]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict; Max-Age=604800"
                },
                "description": "Refresh token set as HTTP-only cookie"
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "\"email\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account not activated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account not activated. Please verify your email"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests, please try again later."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/forgotPassword": {
      "post": {
        "tags": ["Auth"],
        "summary": "Initiate password reset process",
        "description": "Sends a password reset OTP to the user's email address if the account exists.",
        "operationId": "forgotPassword",
        "requestBody": {
          "description": "User's email address",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset OTP sent if account exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset OTP sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"email\" is required"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests, please try again later."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to send email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to send password reset email"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/resetPassword": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset user password using OTP",
        "description": "Allows users to reset their password by providing a valid OTP sent to their email.",
        "operationId": "resetPassword",
        "requestBody": {
          "description": "Password reset details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "otp": {
                    "type": "string",
                    "description": "One-time password received via email"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "New password to set",
                    "minLength": 6
                  }
                },
                "required": ["email", "otp", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid or expired reset token"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Validation error message"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [],
        "x-rate-limit": {
          "description": "Rate limited to prevent brute force attacks"
        }
      }
    },
    "/api/auth/forgotPasswordWithoutEmail": {
      "post": {
        "tags": ["Auth"],
        "summary": "Initiate password reset using refreshToken",
        "description": "Generates and sends a password reset OTP to the user's email identified by their refreshToken. Requires valid refreshToken cookie.",
        "operationId": "forgotPasswordWithoutEmail",
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset OTP sent"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "x-rate-limit": {
          "description": "Rate limited to prevent abuse"
        }
      }
    },
    "/api/auth/resetPasswordWithoutEmail": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password using OTP (refreshToken flow)",
        "description": "Resets user's password using OTP received via email. Requires valid refreshToken cookie.",
        "operationId": "resetPasswordWithoutEmail",
        "requestBody": {
          "description": "Password reset details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string",
                    "description": "One-time password received via email"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "New password to set",
                    "minLength": 6
                  }
                },
                "required": ["otp", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid or expired reset token"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Validation error message"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No token provided"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "x-rate-limit": {
          "description": "Rate limited to prevent brute force attacks"
        }
      }
    },
    "/api/auth/refreshAccessToken": {
      "post": {
        "tags": ["Auth"],
        "summary": "Generate new access token using refresh token",
        "description": "Creates a new access token when provided with a valid refresh token.",
        "operationId": "refreshAccessToken",
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Valid refresh token obtained during signin",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "New JWT access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Refresh token missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Refresh token missing"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid or mismatched refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid refresh token"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests, please try again later."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/users/all": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users with pagination",
        "description": "Retrieves a paginated list of all users. Requires admin permission.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 5
                    },
                    "totalUsers": {
                      "type": "integer",
                      "example": 42
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@example.com"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "role": {
                            "type": "string",
                            "example": "USER"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - User does not have admin permissions"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get full user profile by ID",
        "description": "Retrieves detailed information about a specific user. Requires authentication and appropriate permissions.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@example.com"
                        },
                        "username": {
                          "type": "string",
                          "example": "johndoe"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "role": {
                          "type": "string",
                          "example": "USER"
                        },
                        "profilePic": {
                          "type": "string",
                          "nullable": true,
                          "example": "https://example.com/profile.jpg"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "nullable": true,
                          "example": "+1234567890"
                        },
                        "jobTitle": {
                          "type": "string",
                          "nullable": true,
                          "example": "Software Developer"
                        },
                        "timezone": {
                          "type": "string",
                          "nullable": true,
                          "example": "America/New_York"
                        },
                        "bio": {
                          "type": "string",
                          "nullable": true,
                          "example": "Software developer with 5 years of experience"
                        },
                        "preferences": {
                          "type": "object",
                          "nullable": true
                        },
                        "isActive": {
                          "type": "boolean",
                          "example": true
                        },
                        "isOwner": {
                          "type": "boolean",
                          "example": false
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastLogin": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "lastLogout": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "department": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "permissions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entityType": {
                                "type": "string"
                              },
                              "entityId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "teamMemberships": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "team": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "activityLogs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "action": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - User does not have required permissions"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user account",
        "description": "Updates user account information. Users can update their own basic information, while admins can modify additional fields.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "jobTitle": {
                    "type": "string",
                    "example": "Senior Developer"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "America/New_York"
                  },
                  "bio": {
                    "type": "string",
                    "example": "Software developer with extensive experience"
                  },
                  "role": {
                    "type": "string",
                    "description": "Admin only field",
                    "example": "ADMIN"
                  },
                  "departmentId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Admin only field"
                  },
                  "organizationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Admin only field"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User account updated successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "nullable": true
                        },
                        "jobTitle": {
                          "type": "string",
                          "nullable": true
                        },
                        "timezone": {
                          "type": "string",
                          "nullable": true
                        },
                        "bio": {
                          "type": "string",
                          "nullable": true
                        },
                        "departmentId": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true
                        },
                        "profilePic": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or validation error"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - User does not have required permissions or account is not active"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refreshToken",
        "description": "Refresh token cookie for authentication"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["MEMBER", "ADMIN", "SUPER_ADMIN"],
            "default": "MEMBER"
          },
          "isActive": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
