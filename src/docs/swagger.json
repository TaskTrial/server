{
  "openapi": "3.0.0",
  "info": {
    "title": "TaskTrial APIs",
    "version": "1.0.0",
    "description": "Project Management App",
    "contact": {
      "email": "tasktrial27@gmail.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Organization",
      "description": "Organization management"
    },
    {
      "name": "Users",
      "description": "User management"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Creates a new user account and sends verification OTP to email",
        "operationId": "signup",
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              },
              "examples": {
                "basic": {
                  "value": {
                    "email": "user@example.com",
                    "password": "securePassword123",
                    "firstName": "John",
                    "lastName": "Doe",
                    "username": "johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "error": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verifyEmail": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify user email",
        "description": "Verify user's email address using the OTP sent to their email",
        "operationId": "verifyEmail",
        "requestBody": {
          "description": "Email verification data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid or expired OTP"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "Authenticate user and return JWT tokens",
        "operationId": "signin",
        "requestBody": {
          "description": "User credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "403": {
            "description": "Account not activated"
          }
        }
      }
    },
    "/api/auth/forgotPassword": {
      "post": {
        "tags": ["Auth"],
        "summary": "Request password reset",
        "description": "Initiate password reset process by sending OTP to user's email",
        "operationId": "forgotPassword",
        "requestBody": {
          "description": "User email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset OTP sent if account exists"
          }
        }
      }
    },
    "/api/auth/resetPassword": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password",
        "description": "Reset user password using the OTP received via email",
        "operationId": "resetPassword",
        "requestBody": {
          "description": "Password reset data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired OTP"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/refreshAccessToken": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh access token",
        "description": "Generate new access token using refresh token",
        "operationId": "refreshAccessToken",
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/auth/google": {
      "post": {
        "tags": ["Auth"],
        "summary": "Google OAuth login",
        "description": "Authenticate or register user using Google OAuth",
        "operationId": "googleOAuthLogin",
        "requestBody": {
          "description": "Google ID token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleOAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Google authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleOAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Google authentication failed"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "description": "Invalidate user's refresh token and record logout time",
        "operationId": "logout",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Internal server error",
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/organization": {
      "post": {
        "tags": ["Organization"],
        "summary": "Create organization",
        "description": "Create a new organization with the current user as owner",
        "operationId": "createOrganization",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Organization data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Organization already exists"
          }
        }
      }
    },
    "/api/organization/verifyOrg": {
      "post": {
        "tags": ["Organization"],
        "summary": "Verify organization email",
        "description": "Verify organization's contact email using OTP",
        "operationId": "verifyOrganization",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Verification data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization verified successfully"
          },
          "400": {
            "description": "Invalid or expired OTP"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/api/organization/all": {
      "get": {
        "tags": ["Organization"],
        "summary": "List organizations",
        "description": "Get paginated list of organizations with filtering and sorting",
        "operationId": "getAllOrganizations",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "type": "string",
              "enum": ["createdAt", "name", "industry", "status"],
              "default": "createdAt"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by organization name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filter by industry",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "APPROVED", "REJECTED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organizations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/organization/{organizationId}": {
      "get": {
        "tags": ["Organization"],
        "summary": "Get organization details",
        "description": "Get detailed information about a specific organization",
        "operationId": "getOrganization",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "description": "ID of the organization to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid organization ID"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "put": {
        "tags": ["Organization"],
        "summary": "Update organization",
        "description": "Update organization details",
        "operationId": "updateOrganization",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "description": "ID of the organization to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organization update data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "delete": {
        "tags": ["Organization"],
        "summary": "Delete organization",
        "description": "Soft delete an organization (marks as deleted but retains in database)",
        "operationId": "deleteOrganization",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "description": "ID of the organization to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization deleted successfully"
          },
          "400": {
            "description": "Invalid organization ID"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/api/organization/{organizationId}/addOwner": {
      "post": {
        "tags": ["Organization"],
        "summary": "Add owners to organization",
        "description": "Add one or more users as owners to an organization. Requires admin or existing owner permissions.",
        "operationId": "addOwners",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "description": "ID of the organization to add owners to",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "User IDs to add as owners",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOwnersRequest"
              },
              "examples": {
                "basic": {
                  "value": {
                    "userIds": [
                      "550e8400-e29b-41d4-a716-446655440000",
                      "550e8400-e29b-41d4-a716-446655440001"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owners added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddOwnersResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "message": "Successfully added 2 owner(s) to the organization",
                      "data": {
                        "addedOwners": [
                          {
                            "id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "John Doe",
                            "email": "john@example.com"
                          },
                          {
                            "id": "550e8400-e29b-41d4-a716-446655440001",
                            "name": "Jane Smith",
                            "email": "jane@example.com"
                          }
                        ],
                        "skippedOwners": []
                      }
                    }
                  },
                  "partial": {
                    "value": {
                      "success": true,
                      "message": "Successfully added 1 owner(s) to the organization",
                      "data": {
                        "addedOwners": [
                          {
                            "id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "John Doe",
                            "email": "john@example.com"
                          }
                        ],
                        "skippedOwners": [
                          "550e8400-e29b-41d4-a716-446655440001"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input or non-existent users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "success": false,
                      "message": "\"userIds\" must contain at least 1 items",
                      "errors": ["\"userIds\" must contain at least 1 items"]
                    }
                  },
                  "invalidUsers": {
                    "value": {
                      "success": false,
                      "message": "One or more specified users do not exist",
                      "errors": {
                        "invalidUserIds": [
                          "550e8400-e29b-41d4-a716-446655440002"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User lacks permission to add owners",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organizationId}/logo/upload": {
      "post": {
        "tags": ["Organization"],
        "summary": "Upload organization logo",
        "description": "Upload a logo image for an organization. Requires admin or owner permissions.",
        "operationId": "uploadOrganizationLogo",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "description": "ID of the organization",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Logo image file (JPG/PNG)"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoUploadResponse"
                },
                "example": {
                  "message": "Organization logo uploaded successfully",
                  "logoUrl": "https://res.cloudinary.com/example/image/upload/v123456789/logo.jpg",
                  "organization": {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "name": "Tech Corp",
                    "logoUrl": "https://res.cloudinary.com/example/image/upload/v123456789/logo.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing organization ID or file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "missingOrgId": {
                    "value": {
                      "success": false,
                      "message": "Organization ID is required"
                    }
                  },
                  "missingFile": {
                    "value": {
                      "message": "No file uploaded"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User lacks permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organizationId}/logo/delete": {
      "delete": {
        "tags": ["Organization"],
        "summary": "Delete organization logo",
        "description": "Remove the logo for an organization. Requires admin or owner permissions.",
        "operationId": "deleteOrganizationLogo",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "description": "ID of the organization",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logo deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoDeleteResponse"
                },
                "example": {
                  "message": "Organization logo deleted successfully",
                  "organization": {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "name": "Tech Corp",
                    "logoUrl": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing organization ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User lacks permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Organization or logo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "orgNotFound": {
                    "value": {
                      "success": false,
                      "message": "Organization not found"
                    }
                  },
                  "logoNotFound": {
                    "value": {
                      "message": "Organization logo not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/all": {
      "get": {
        "tags": ["Users"],
        "summary": "List all users",
        "description": "Retrieve a paginated list of all users.",
        "operationId": "getAllUsers",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "description": "Retrieve detailed information about a specific user.",
        "operationId": "getUserById",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user account",
        "description": "Update user profile information.",
        "operationId": "updateUserAccount",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "User update data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Soft delete a user",
        "description": "Mark a user as deleted.",
        "operationId": "softDeleteUser",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User soft-deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User soft-deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/api/users/update-password/{id}": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user password",
        "description": "Update a user's password.",
        "operationId": "updateUserPassword",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Password update data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/api/users/restore/{id}": {
      "patch": {
        "tags": ["Users"],
        "summary": "Restore a soft-deleted user",
        "description": "Restore a user that was previously soft-deleted.",
        "operationId": "restoreUser",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User restored successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/api/users/{id}/profile-picture": {
      "post": {
        "tags": ["Users"],
        "summary": "Upload profile picture",
        "description": "Upload a profile picture for a user.",
        "operationId": "uploadProfilePicture",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Profile picture file"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile picture uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete profile picture",
        "description": "Delete a user's profile picture.",
        "operationId": "deleteProfilePicture",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile picture deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile picture deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Validation error details"]
          }
        }
      },
      "SignupRequest": {
        "type": "object",
        "required": ["email", "password", "firstName", "lastName", "username"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "securePassword123"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User created. Please verify your email."
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
          }
        }
      },
      "VerifyEmailRequest": {
        "type": "object",
        "required": ["email", "otp"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "otp": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User login successfully"
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": ["email", "otp", "newPassword"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "otp": {
            "type": "string",
            "example": "123456"
          },
          "newPassword": {
            "type": "string",
            "minLength": 8,
            "example": "newSecurePassword123"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "GoogleOAuthRequest": {
        "type": "object",
        "required": ["idToken"],
        "properties": {
          "idToken": {
            "type": "string",
            "description": "Google OAuth ID token",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ij..."
          }
        }
      },
      "GoogleOAuthResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Google authentication successful"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "profilePic": {
                "type": "string"
              }
            }
          },
          "tokens": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              },
              "refreshToken": {
                "type": "string"
              }
            }
          }
        }
      },
      "CreateOrganizationRequest": {
        "type": "object",
        "required": ["name", "contactEmail"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Tech Innovations Inc."
          },
          "description": {
            "type": "string",
            "example": "A leading software development company"
          },
          "industry": {
            "type": "string",
            "example": "Technology"
          },
          "sizeRange": {
            "type": "string",
            "example": "50-200"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "example": "https://techinnovations.com"
          },
          "logoUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://techinnovations.com/logo.png"
          },
          "address": {
            "type": "string",
            "example": "123 Tech Street, Silicon Valley"
          },
          "contactEmail": {
            "type": "string",
            "format": "email",
            "example": "contact@techinnovations.com"
          },
          "contactPhone": {
            "type": "string",
            "example": "+1-555-123-4567"
          },
          "orgOwnerId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        }
      },
      "CreateOrganizationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Organization created successfully. Please verify your org"
          },
          "data": {
            "type": "object",
            "properties": {
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["PENDING", "APPROVED", "REJECTED"]
                  },
                  "isVerified": {
                    "type": "boolean"
                  }
                }
              },
              "organizationOwner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        }
      },
      "VerifyOrganizationRequest": {
        "type": "object",
        "required": ["email", "otp"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "contact@techinnovations.com"
          },
          "otp": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "OrganizationListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Organizations retrieved successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "organizations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationListItem"
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "integer",
                    "example": 100
                  },
                  "page": {
                    "type": "integer",
                    "example": 1
                  },
                  "limit": {
                    "type": "integer",
                    "example": 10
                  },
                  "pages": {
                    "type": "integer",
                    "example": 10
                  }
                }
              }
            }
          }
        }
      },
      "OrganizationListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "sizeRange": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"]
          },
          "isVerified": {
            "type": "boolean"
          },
          "statistics": {
            "type": "object",
            "properties": {
              "usersCount": {
                "type": "integer"
              },
              "departmentsCount": {
                "type": "integer"
              },
              "teamsCount": {
                "type": "integer"
              },
              "projectsCount": {
                "type": "integer"
              }
            }
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "OrganizationDetailResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Organization retrieved successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "industry": {
                "type": "string"
              },
              "sizeRange": {
                "type": "string"
              },
              "website": {
                "type": "string"
              },
              "logoUrl": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": ["PENDING", "APPROVED", "REJECTED", "DELETED"]
              },
              "isVerified": {
                "type": "boolean"
              },
              "contactEmail": {
                "type": "string"
              },
              "contactPhone": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "statistics": {
                "type": "object",
                "properties": {
                  "usersCount": {
                    "type": "integer"
                  },
                  "departmentsCount": {
                    "type": "integer"
                  },
                  "teamsCount": {
                    "type": "integer"
                  },
                  "projectsCount": {
                    "type": "integer"
                  },
                  "templatesCount": {
                    "type": "integer"
                  }
                }
              },
              "owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "profileImage": {
                      "type": "string"
                    }
                  }
                }
              },
              "departments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "teamsCount": {
                      "type": "integer"
                    },
                    "usersCount": {
                      "type": "integer"
                    }
                  }
                }
              },
              "teams": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "usersCount": {
                      "type": "integer"
                    },
                    "projectsCount": {
                      "type": "integer"
                    }
                  }
                }
              },
              "projects": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["ACTIVE", "COMPLETED", "ON_HOLD"]
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "hasMoreDepartments": {
                "type": "boolean"
              },
              "hasMoreTeams": {
                "type": "boolean"
              },
              "hasMoreProjects": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "UpdateOrganizationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tech Innovations Inc. (Updated)"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "sizeRange": {
            "type": "string"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logoUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"]
          },
          "isVerified": {
            "type": "boolean"
          },
          "contactEmail": {
            "type": "string",
            "format": "email"
          },
          "contactPhone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "UpdateOrganizationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Organization updated successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "industry": {
                "type": "string"
              },
              "sizeRange": {
                "type": "string"
              },
              "website": {
                "type": "string"
              },
              "logoUrl": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "isVerified": {
                "type": "boolean"
              },
              "contactEmail": {
                "type": "string"
              },
              "contactPhone": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "AddOwnersResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully added 2 owner(s) to the organization"
          },
          "data": {
            "type": "object",
            "properties": {
              "addedOwners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john@example.com"
                    }
                  }
                }
              },
              "skippedOwners": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "User IDs that were already owners and weren't added again"
              }
            }
          }
        }
      },
      "LogoUploadResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Organization logo uploaded successfully"
          },
          "logoUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL of the uploaded logo"
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "logoUrl": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "LogoDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Organization logo deleted successfully"
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "logoUrl": {
                "type": "string",
                "nullable": true,
                "format": "uri"
              }
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "role": {
            "type": "string",
            "enum": ["MEMBER", "ADMIN", "MANAGER"],
            "example": "MEMBER"
          },
          "profilePic": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/profile.jpg"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+1234567890"
          },
          "jobTitle": {
            "type": "string",
            "example": "Software Engineer"
          },
          "timezone": {
            "type": "string",
            "example": "UTC+2"
          },
          "bio": {
            "type": "string",
            "example": "Experienced software developer"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-02T00:00:00Z"
          }
        }
      },
      "UserListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Users retrieved successfully"
          },
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 5
          },
          "totalUsers": {
            "type": "integer",
            "example": 50
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasicUserInfo"
            }
          }
        }
      },
      "BasicUserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "role": {
            "type": "string",
            "enum": ["MEMBER", "ADMIN", "MANAGER"],
            "example": "MEMBER"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 2,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "example": "Doe"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+1234567890"
          },
          "jobTitle": {
            "type": "string",
            "example": "Software Engineer"
          },
          "timezone": {
            "type": "string",
            "example": "UTC+2"
          },
          "bio": {
            "type": "string",
            "example": "Experienced software developer"
          },
          "role": {
            "type": "string",
            "enum": ["MEMBER", "ADMIN", "MANAGER"],
            "example": "MEMBER"
          },
          "departmentId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440002"
          }
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "required": ["oldPassword", "newPassword"],
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "oldPassword123"
          },
          "newPassword": {
            "type": "string",
            "minLength": 8,
            "example": "newSecurePassword456"
          }
        }
      },
      "ProfilePicUploadResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Profile picture uploaded successfully"
          },
          "profilePicUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/profile.jpg"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "ProfilePicDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Profile picture deleted successfully"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "examples": {
      "InvalidToken": {
        "value": {
          "success": false,
          "message": "Invalid token"
        }
      },
      "ValidationError": {
        "value": {
          "success": false,
          "message": "Validation failed",
          "errors": [
            "\"email\" must be a valid email",
            "\"password\" length must be at least 8 characters long"
          ]
        }
      }
    }
  }
}
